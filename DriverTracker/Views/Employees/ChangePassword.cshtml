@model ChangePasswordViewModel

<div class="container">
    <h2>Change Password</h2>

    <div class="row">
        <div class="col-md-6">
            <form asp-action="ChangePassword" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="Email" />

                @if (!User.IsInRole("Admin") || User.Identity.Name == Model.Email)
                {
                    <div class="form-group mb-3">
                        <label asp-for="CurrentPassword">Current Password</label>
                        <input asp-for="CurrentPassword" class="form-control" type="password" />
                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                    </div>
                }

                <div class="form-group mb-3">
                    <label asp-for="NewPassword">New Password</label>
                    <input asp-for="NewPassword" class="form-control" type="password" />
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="ConfirmPassword">Confirm New Password</label>
                    <input asp-for="ConfirmPassword" class="form-control" type="password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Change Password</button>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}